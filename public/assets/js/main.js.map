{"version":3,"sources":["main.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.js","sourcesContent":["'use strict';\n\nconst pa = document.querySelector('.js-container');\nconst button = document.querySelector('.button');\n\nwindow.SpeechRecognition =\n  window.SpeechRecognition || window.webkitSpeechRecognition;\n\nconst recognition = new SpeechRecognition();\nrecognition.interimResults = true;\nrecognition.lang = 'en-US';\nrecognition.lang = 'es';\n\nfunction resetfn(e) {\n  e.preventDefault();\n  pa.innerHTML = '';\n  return pa;\n}\n\n//events\nrecognition.addEventListener('result', (e) => {\n  const transcript = Array.from(e.results)\n    .map((result) => result[0])\n    .map((result) => result.transcript)\n    .join('');\n  const poopScript = transcript.replace(/caca|mierda/gi, 'ðŸ’©');\n  document.getElementsByClassName('paragraph').textContent = poopScript;\n  let newp = `<p class=\"paragraph\">${transcript}</p>`;\n  if (e.results[0].isFinal) {\n    pa.innerHTML += newp;\n  }\n  localStorage.setItem('meeting notes', JSON.stringify(transcript));\n});\n\nrecognition.addEventListener('end', recognition.start);\nbutton.addEventListener('click', resetfn);\n\nrecognition.start();\n"]}